name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # User Authentication Service
  userauthentication-service:
    name: üê≥ User Authentication Service - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend/userauthentication-service

      - name: Build Docker image
        run: docker build -t userauthentication-service ./backend/userauthentication-service

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag userauthentication-service ${{ secrets.DOCKER_USERNAME }}/userauthentication-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/userauthentication-service:latest

  # Video Streaming Service
  videostreaming-service:
    name: üé• Video Streaming Service - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend/videostreaming-service

      - name: Build Docker image
        run: docker build -t videostreaming-service ./backend/videostreaming-service

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag videostreaming-service ${{ secrets.DOCKER_USERNAME }}/videostreaming-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/videostreaming-service:latest

  # API Gateway
  api-gateway:
    name: üö™ API Gateway - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend/api-gateway

      - name: Build Docker image
        run: docker build -t api-gateway ./backend/api-gateway

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag api-gateway ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

  # Watchlist Service
  watchlist-service:
    name: üìÉ Watchlist Service - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend/watchlist-service

      - name: Build Docker image
        run: docker build -t watchlist-service ./backend/watchlist-service

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag watchlist-service ${{ secrets.DOCKER_USERNAME }}/watchlist-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/watchlist-service:latest

          frontend:
            name: üíª Frontend - Build and Push Docker Image
            runs-on: ubuntu-latest
            steps:
              - name: Checkout code
                uses: actions/checkout@v3
        
              - name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                  node-version: '20'
        
              - name: Configure npm registry
                run: npm config set registry https://registry.npmjs.org/
        
              - name: Increase npm timeout
                run: npm config set fetch-retries 5
        
              - name: Install dependencies
                run: |
                  for i in {1..5}; do
                    npm install && break || sleep 10;
                  done
                working-directory: ./frontend
        
              - name: Build Docker image
                run: docker build -t frontend ./frontend
        
              - name: Log in to Docker Hub
                run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
              - name: Push Docker image
                run: |
                  docker tag frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
        