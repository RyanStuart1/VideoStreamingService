name: CI/CD Pipeline

on:
 push:
   branches:
     - main
 pull_request:
   branches:
     - main

jobs:
 # User Service Job
 userauthentication-service:
   name: üê≥ User Authentication Service - Build and Push Docker Image
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for User Service
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies for User Authentication Service
        run: npm install
        working-directory: ./backend/userauthentication-service

      - name: Build Docker image for User Service
        run: docker build -t userauthentication-service ./backend/userauthentication-service

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push User authentication Service to Docker Hub
        run: |
          docker tag userauthentication-service ${{ secrets.DOCKER_USERNAME }}/userauthentication-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/userauthentication-service:latest
      
 # Video Service Job
 videostreaming-service:
   name: üé• Video Streaming Service - Build and Push Docker Image
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Node.js for Video Streaming Service
       uses: actions/setup-node@v3
       with:
         node-version: '20'

     - name: Install dependencies for Video Streaming Service
       run: npm install
       working-directory: ./backend/videostreaming-service

     - name: Build Docker image for Video Service
       run: docker build -t video-service ./backend/videostreaming-service

     - name: Log in to Docker Hub
       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

     - name: Push video streaming Service to Docker Hub
       run: |
         docker tag videostreaming-service ${{ secrets.DOCKER_USERNAME }}/videostreaming-service:latest
         docker push ${{ secrets.DOCKER_USERNAME }}/videostreaming-service:latest
     

 # API Gateway Job
 api-gateway:
   name: üö™ API Gateway - Build and Push Docker Image
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Node.js for API Gateway
       uses: actions/setup-node@v3
       with:
         node-version: '14'

     - name: Install dependencies for API Gateway
       run: npm install
       working-directory: ./backend/api-gateway

     - name: Build Docker image for API Gateway
       run: docker build -t api-gateway ./backend/api-gateway
    
     - name: Log in to Docker Hub
       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

     - name: Push API Gateway to Docker Hub
       run: |
         docker tag api-gateway ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
         docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
     

 # Watchlist service Job
 watchlist-service:
   name: watchlist service - Build and Push Docker Image
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Node.js for watchlist service
       uses: actions/setup-node@v3
       with:
         node-version: '14'

     - name: Install dependencies for watchlist service
       run: npm install
       working-directory: ./backend/watchlist-service

     - name: Build Docker image for watchlist service
       run: docker build -t watchlist-service ./backend/watchlist-service

     - name: Log in to Docker Hub
       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

     - name: Push watchlist Service to Docker Hub
       run: |
         docker tag watchlist-service ${{ secrets.DOCKER_USERNAME }}/watchlist-service:latest
         docker push ${{ secrets.DOCKER_USERNAME }}/watchlist-service:latest   

 # Frontend Service Job
 frontend:
   name: üíª Frontend - Build and Push Docker Image
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Node.js for Frontend
       uses: actions/setup-node@v3
       with:
         node-version: '20'

     - name: Install dependencies for Frontend
       run: npm install
       working-directory: ./frontend

     - name: Build Docker image for Frontend
       run: docker build -t frontend ./frontend

     - name: Log in to Docker Hub
       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

     - name: Push Frontend to Docker Hub
       run: |
         docker tag frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
         docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest   