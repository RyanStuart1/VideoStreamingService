events { }

# RTMP configuration block
rtmp {
    server {
        listen 1935;  # RTMP default port

        # Define an application for video streaming
        application vod {
            live on;                # Enable live streaming
            record off;             # Disable recording
        }
    }
}

http {
  # Define upstream for the frontend
  upstream frontend {
    server frontend:3000;  # Points to the frontend service in docker-compose
  }

  # Define upstream for the API Gateway
  upstream api_gateway {
    server api-gateway:3003;  # Points to the API Gateway service in docker-compose
  }

  server {
    listen 80;  # NGINX listens on port 80 inside the container

    # Route API requests to the API Gateway
    location /api/ {
        proxy_pass http://api_gateway;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }

        client_max_body_size 10M;
    }

    # Dynamically route video requests to the S3 bucket
    location /videos/ {
        proxy_pass https://video-streaming-service-rs.s3.us-east-1.amazonaws.com;
        proxy_http_version 1.1;
        proxy_set_header Host video-streaming-service-rs.s3.us-east-1.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Support range requests for efficient streaming
        add_header Accept-Ranges bytes;

        # Enable caching for video content
        add_header Cache-Control "public, max-age=3600";
        proxy_buffering off;
    }

    # Route all other traffic to the frontend
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;

        # Enable caching for static files
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|map)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public";
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Disable logging for favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
  }
}
