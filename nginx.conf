events { }

# RTMP configuration block
rtmp {
    server {
        listen 1935;  # RTMP default port

        # Define an application for video streaming
        application vod {
            live on;                # Enable live streaming
            record off;             # Disable recording
        }
    }
}

http {
  # Define upstream for the frontend
  upstream frontend {
    server frontend:3000;  # Points to the frontend service in docker-compose
  }

  # Define upstream for the API Gateway
  upstream api_gateway {
    server api-gateway:3003;  # Points to the API Gateway service in docker-compose
  }

  server {
    listen 80;  # NGINX listens on port 80 inside the container

    # Route API requests to the API Gateway
    location /api/ {
      proxy_pass http://api_gateway;  # Forward /api/ requests to the API Gateway
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      client_max_body_size 10M;  # Limit the maximum request size (optional)
    }

    # Dynamically route video requests to the S3 bucket
    location /videos/ {
      proxy_pass https://video-streaming-service-rs.s3.us-east-1.amazonaws.com;  # S3 bucket
      proxy_http_version 1.1;
      proxy_set_header Host video-streaming-service-rs.s3.us-east-1.amazonaws.com;  # Set the S3 bucket as the host
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # Enable caching for better performance
      add_header Cache-Control "public, max-age=3600";

      # Add headers for video streaming
      add_header Accept-Ranges bytes;
      add_header Content-Type video/mp4;

      # Prevent buffering for real-time streaming
      proxy_buffering off;
    }

    # Route all other traffic to the frontend
    location / {
      root /usr/share/nginx/html;
      index index.html;
      try_files $uri /index.html;  # Ensure React routes are served
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
