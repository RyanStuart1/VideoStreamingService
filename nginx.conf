worker_processes auto;

events {}

http {
    # MIME types for video streaming
    types {
        video/mp4 mp4;
        application/vnd.apple.mpegurl m3u8;
        video/MP2T ts;
    }

    server {
        listen 80;

        # Proxy API requests to the API Gateway
        location /api/ {
            proxy_pass http://localhost:3003; # Assuming the API Gateway runs locally on the same Docker network
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

            if ($request_method = OPTIONS) {
                return 204;
            }

            client_max_body_size 10M;
        }

        # Proxy video requests to the S3 bucket
        location /videos/ {
            proxy_pass https://video-streaming-service-rs.s3.us-east-1.amazonaws.com;
            proxy_http_version 1.1;
            proxy_set_header Host video-streaming-service-rs.s3.us-east-1.amazonaws.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Support Range requests for efficient streaming
            add_header Accept-Ranges bytes;

            # Enable caching for video content
            add_header Cache-Control "public, max-age=3600";
            proxy_buffering off;
        }

        # HLS Streaming (serve .m3u8 and .ts files)
        location /hls/ {
            root /var/www/html; # Directory where HLS files are stored
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # Default error pages
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Enable gzip compression for performance
        gzip on;
        gzip_types text/css application/javascript image/svg+xml;
        gzip_min_length 256;
        gzip_vary on;

        # Add security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";

        # Error log configuration
        error_log /var/log/nginx/error.log warn;
    }
}

rtmp {
    server {
        listen 1935; # RTMP streaming port

        application live {
            live on;
            record off;
        }
    }
}
